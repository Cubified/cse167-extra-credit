var Qe=Object.defineProperty;var Ke=(e,t,n)=>t in e?Qe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var ue=(e,t,n)=>(Ke(e,typeof t!="symbol"?t+"":t,n),n);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))i(c);new MutationObserver(c=>{for(const l of c)if(l.type==="childList")for(const h of l.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function n(c){const l={};return c.integrity&&(l.integrity=c.integrity),c.referrerPolicy&&(l.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?l.credentials="include":c.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function i(c){if(c.ep)return;c.ep=!0;const l=n(c);fetch(c.href,l)}})();function k(){}function Ue(e){return e()}function He(){return Object.create(null)}function ee(e){e.forEach(Ue)}function Ve(e){return typeof e=="function"}function Ye(e,t){return e!=e?t==t:e!==t||e&&typeof e=="object"||typeof e=="function"}let Z;function te(e,t){return e===t?!0:(Z||(Z=document.createElement("a")),Z.href=t,e===Z.href)}function ze(e){return Object.keys(e).length===0}function r(e,t){e.appendChild(t)}function ne(e,t,n){e.insertBefore(t,n||null)}function B(e){e.parentNode&&e.parentNode.removeChild(e)}function fe(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function a(e){return document.createElement(e)}function De(e){return document.createTextNode(e)}function u(){return De(" ")}function d(e,t,n){n==null?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function Ge(e){return Array.from(e.childNodes)}let ge;function R(e){ge=e}const q=[],Ie=[];let O=[];const je=[],We=Promise.resolve();let he=!1;function Xe(){he||(he=!0,We.then(Fe))}function pe(e){O.push(e)}const me=new Set;let I=0;function Fe(){if(I!==0)return;const e=ge;do{try{for(;I<q.length;){const t=q[I];I++,R(t),Je(t.$$)}}catch(t){throw q.length=0,I=0,t}for(R(null),q.length=0,I=0;Ie.length;)Ie.pop()();for(let t=0;t<O.length;t+=1){const n=O[t];me.has(n)||(me.add(n),n())}O.length=0}while(q.length);for(;je.length;)je.pop()();he=!1,me.clear(),R(e)}function Je(e){if(e.fragment!==null){e.update(),ee(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(pe)}}function Ze(e){const t=[],n=[];O.forEach(i=>e.indexOf(i)===-1?t.push(i):n.push(i)),n.forEach(i=>i()),O=t}const et=new Set;function tt(e,t){e&&e.i&&(et.delete(e),e.i(t))}function j(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function nt(e,t,n){const{fragment:i,after_update:c}=e.$$;i&&i.m(t,n),pe(()=>{const l=e.$$.on_mount.map(Ue).filter(Ve);e.$$.on_destroy?e.$$.on_destroy.push(...l):ee(l),e.$$.on_mount=[]}),c.forEach(pe)}function rt(e,t){const n=e.$$;n.fragment!==null&&(Ze(n.after_update),ee(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function ot(e,t){e.$$.dirty[0]===-1&&(q.push(e),Xe(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function it(e,t,n,i,c,l,h=null,_=[-1]){const m=ge;R(e);const f=e.$$={fragment:null,ctx:[],props:l,update:k,not_equal:c,bound:He(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(m?m.$$.context:[])),callbacks:He(),dirty:_,skip_bound:!1,root:t.target||m.$$.root};h&&h(f.root);let p=!1;if(f.ctx=n?n(e,t.props||{},(w,P,...T)=>{const N=T.length?T[0]:P;return f.ctx&&c(f.ctx[w],f.ctx[w]=N)&&(!f.skip_bound&&f.bound[w]&&f.bound[w](N),p&&ot(e,w)),P}):[],f.update(),p=!0,ee(f.before_update),f.fragment=i?i(f.ctx):!1,t.target){if(t.hydrate){const w=Ge(t.target);f.fragment&&f.fragment.l(w),w.forEach(B)}else f.fragment&&f.fragment.c();t.intro&&tt(e.$$.fragment),nt(e,t.target,t.anchor),Fe()}R(m)}class at{constructor(){ue(this,"$$");ue(this,"$$set")}$destroy(){rt(this,1),this.$destroy=k}$on(t,n){if(!Ve(n))return k;const i=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return i.push(n),()=>{const c=i.indexOf(n);c!==-1&&i.splice(c,1)}}$set(t){this.$$set&&!ze(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const st="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(st);function qe(e,t,n){const i=e.slice();return i[3]=t[n].desc,i[4]=t[n].img,i[6]=n,i}function Oe(e,t,n){const i=e.slice();return i[3]=t[n].desc,i[4]=t[n].img,i[6]=n,i}function Pe(e,t,n){const i=e.slice();return i[3]=t[n].desc,i[4]=t[n].img,i[6]=n,i}function Ne(e){let t,n,i,c,l,h=e[3]+"",_;return{c(){t=a("div"),n=a("img"),c=u(),l=a("p"),_=u(),te(n.src,i=re+"/hw4/"+e[4])||d(n,"src",i),d(n,"alt","HW4 demo "+e[6]),d(t,"class","item nonsquare")},m(m,f){ne(m,t,f),r(t,n),r(t,c),r(t,l),l.innerHTML=h,r(t,_)},p:k,d(m){m&&B(t)}}}function Re(e){let t,n,i,c,l,h=e[3]+"",_;return{c(){t=a("div"),n=a("img"),c=u(),l=a("p"),_=u(),te(n.src,i=re+"/hw3/"+e[4])||d(n,"src",i),d(n,"alt","HW3 demo "+e[6]),d(t,"class","item nonsquare")},m(m,f){ne(m,t,f),r(t,n),r(t,c),r(t,l),l.innerHTML=h,r(t,_)},p:k,d(m){m&&B(t)}}}function Be(e){let t,n,i,c,l,h=e[3]+"",_;return{c(){t=a("div"),n=a("img"),c=u(),l=a("p"),_=u(),te(n.src,i=re+"/hw2/"+e[4])||d(n,"src",i),d(n,"alt","HW2 demo "+e[6]),d(t,"class","item")},m(m,f){ne(m,t,f),r(t,n),r(t,c),r(t,l),l.innerHTML=h,r(t,_)},p:k,d(m){m&&B(t)}}}function ct(e){let t,n,i,c,l,h,_,m,f,p,w,P,T,N,M,U,be,V,F,ve,oe,_e,Q,we,y,ie,ye,ae,xe,S,K,$e,Y,z,Ce,se,ke,D,Te,x,ce,Me,le,Se,A,G,Ae,W,X,Le,de,Ee,J,L=j(e[2]),g=[];for(let s=0;s<L.length;s+=1)g[s]=Ne(Pe(e,L,s));let E=j(e[1]),b=[];for(let s=0;s<E.length;s+=1)b[s]=Re(Oe(e,E,s));let H=j(e[0]),v=[];for(let s=0;s<H.length;s+=1)v[s]=Be(qe(e,H,s));return{c(){t=a("main"),n=a("div"),i=a("img"),l=u(),h=a("h1"),h.textContent="CSE 167 Extra Credit Site",_=u(),m=a("h3"),m.innerHTML='Andrew Russell (<a href="mailto:alrussell@ucsd.edu">alrussell@ucsd.edu</a>)',f=u(),p=a("div"),w=a("h1"),w.innerHTML="Final Project:<br/>Interactive, Real-Time Raytracer in the Terminal",P=u(),T=a("p"),T.innerHTML='I extended my raytracer by reading and writing <a href="https://en.wikipedia.org/wiki/ANSI_escape_code">ANSI escape sequences</a> to standard input and standard output.  Coupled with the performance gains from my bounding volume hierarchy and the addition of multithreading, this allows for interactive raytracing in real-time.',N=u(),M=a("div"),U=a("div"),U.innerHTML='<iframe src="https://www.youtube.com/embed/F71dgYAOl-I?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',be=u(),V=a("div"),F=a("div");for(let s=0;s<g.length;s+=1)g[s].c();ve=u(),oe=a("h4"),oe.textContent="Sources:",_e=u(),Q=a("p"),Q.innerHTML=`<a href="https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf">Triangle intersection algorithm</a>
       | 
      <a href="https://math.stackexchange.com/a/128999">Triangle area formula</a>
       | 
      <a href="https://jacco.ompf2.com/2022/04/13/how-to-build-a-bvh-part-1-basics">BVH calculation</a>
       | 
      <a href="https://tavianator.com/2011/ray_box.html">AABB intersection test</a>
       | 
      <a href="https://github.com/nothings/stb/blob/master/stb_image_write.h"><code>stb_image_write</code></a>`,we=u(),y=a("div"),ie=a("h1"),ie.textContent="Homework 3: Lathe Editor",ye=u(),ae=a("p"),ae.textContent="My project extends Homework 3 by generating a solid of revolution (lathe) from the user's curves.  It also generates smooth vertex normals, demonstrated by a cubemap for reflections.  Users can also add multiple curves and change their colors, in order to create complex compound shapes.",xe=u(),S=a("div"),K=a("div"),K.innerHTML='<iframe src="https://www.youtube.com/embed/aVaHUaQEquQ?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',$e=u(),Y=a("div"),z=a("div");for(let s=0;s<b.length;s+=1)b[s].c();Ce=u(),se=a("h4"),se.textContent="Sources and Asset Credits:",ke=u(),D=a("p"),D.innerHTML=`<a href="https://stackoverflow.com/questions/7904281/opengl-rotate-a-curve-about-the-y-axis">Solid of Revolution Generation</a>
       | 
      <a href="https://computergraphics.stackexchange.com/questions/4031/programmatically-generating-vertex-normals">Vertex Normals Calculation</a>
       | 
      <a href="https://www.humus.name/index.php?page=Textures&amp;start=0">Cubemap Image</a>`,Te=u(),x=a("div"),ce=a("h1"),ce.textContent="Homework 2: Scene Animator",Me=u(),le=a("p"),le.textContent="My project extends Homework 2 by adding more interactivity, turning the scene viewer into a scene editor.  Users can select a cubemap, transform individual objects, apply a texture to an object, add keyframes, and play back animations.  It also adds a custom scene, built to show off these features.",Se=u(),A=a("div"),G=a("div"),G.innerHTML='<iframe src="https://www.youtube.com/embed/l4iw-qttC9c?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',Ae=u(),W=a("div"),X=a("div");for(let s=0;s<v.length;s+=1)v[s].c();Le=u(),de=a("h4"),de.textContent="Sources and Asset Credits:",Ee=u(),J=a("p"),J.innerHTML=`<a href="https://learnopengl.com/Advanced-OpenGL/Cubemaps">Learn OpenGL: Cubemaps</a>
       | 
      <a href="https://www.humus.name/index.php?page=Textures&amp;start=0">Cubemap Images</a>
       | 
      <a href="https://architextures.org/textures/category/stone">Limestone Texture</a>
       | 
      <a href="https://easings.net/#easeInOutQuad">Easing Function Formula</a>
       | 
      I used <a href="https://glm.g-truc.net/0.9.3/api/a00178.html"><code>glm::interpolate</code></a> to achieve interpolation between keyframes.`,te(i.src,c=re+"/utah.png")||d(i,"src",c),d(i,"alt","Utah Teapot"),d(n,"class","masthead"),d(U,"class","video"),d(V,"class","scroller"),d(M,"class","assignment"),d(Q,"class","spread"),d(p,"class","content"),d(K,"class","video"),d(Y,"class","scroller"),d(S,"class","assignment"),d(D,"class","spread"),d(y,"class","content"),d(G,"class","video"),d(W,"class","scroller"),d(A,"class","assignment"),d(J,"class","spread"),d(x,"class","content")},m(s,$){ne(s,t,$),r(t,n),r(n,i),r(n,l),r(n,h),r(n,_),r(n,m),r(t,f),r(t,p),r(p,w),r(p,P),r(p,T),r(p,N),r(p,M),r(M,U),r(M,be),r(M,V),r(V,F);for(let o=0;o<g.length;o+=1)g[o]&&g[o].m(F,null);r(p,ve),r(p,oe),r(p,_e),r(p,Q),r(t,we),r(t,y),r(y,ie),r(y,ye),r(y,ae),r(y,xe),r(y,S),r(S,K),r(S,$e),r(S,Y),r(Y,z);for(let o=0;o<b.length;o+=1)b[o]&&b[o].m(z,null);r(y,Ce),r(y,se),r(y,ke),r(y,D),r(t,Te),r(t,x),r(x,ce),r(x,Me),r(x,le),r(x,Se),r(x,A),r(A,G),r(A,Ae),r(A,W),r(W,X);for(let o=0;o<v.length;o+=1)v[o]&&v[o].m(X,null);r(x,Le),r(x,de),r(x,Ee),r(x,J)},p(s,[$]){if($&4){L=j(s[2]);let o;for(o=0;o<L.length;o+=1){const C=Pe(s,L,o);g[o]?g[o].p(C,$):(g[o]=Ne(C),g[o].c(),g[o].m(F,null))}for(;o<g.length;o+=1)g[o].d(1);g.length=L.length}if($&2){E=j(s[1]);let o;for(o=0;o<E.length;o+=1){const C=Oe(s,E,o);b[o]?b[o].p(C,$):(b[o]=Re(C),b[o].c(),b[o].m(z,null))}for(;o<b.length;o+=1)b[o].d(1);b.length=E.length}if($&1){H=j(s[0]);let o;for(o=0;o<H.length;o+=1){const C=qe(s,H,o);v[o]?v[o].p(C,$):(v[o]=Be(C),v[o].c(),v[o].m(X,null))}for(;o<v.length;o+=1)v[o].d(1);v.length=H.length}},i:k,o:k,d(s){s&&B(t),fe(g,s),fe(b,s),fe(v,s)}}}const re="/cse167-extra-credit";function lt(e){return[[{desc:"<b>Custom Scene</b><br>Use <code>extra_credit_scene.txt</code> to view a custom scene built with cubemaps and reflections in mind.",img:"custom_scene.png"},{desc:"<b>Cubemaps</b>:<br>Press <code>c</code> to switch between cubemaps.",img:"cubemaps.png"},{desc:"<b>Keyframes</b>:<br>Press <code>space</code> in edit mode to add a keyframe, then <code>e</code> to exit edit mode and play back the animation.",img:"keyframes.gif"},{desc:"<b>Edit mode</b>:<br>Press <code>e</code> to enter edit mode, then <code>tab/shift+tab</code> to focus different objects in the scene.",img:"edit_mode.png"},{desc:"<b>Scene editing</b>:<br>Press <code>x/y/z</code> to select an axis, <code>t/r/s</code> to select an operation, and <code>up/down</code> to modify the current object.",img:"scene_editing.png"},{desc:"<b>Mouse orbit</b>:<br>Use the mouse to orbit the scene.",img:"mouse_orbit.png"},{desc:"<b>Reflections</b>:<br>Use the <code>reflectivity</code> command to specify how much of the cubemap an object reflects.",img:"reflections.png"},{desc:"<b>Textures</b>:<br>Press <code>n</code> when in edit mode to cycle between textures for each object.",img:"textures.png"}],[{desc:"<b>Real-time Editing</b><br>Construct curves in a 2D editing window and see them converted into 3D within an interactive viewing window.",img:"lathe.png"},{desc:"<b>Multiple Curves</b><br>Press <code>1/2/3</code> to add a new curve, and <code>C</code> to clear all curves.",img:"compound.png"},{desc:"<b>Vertex Normals</b><br>Each 3D object generates per-vertex normals, capable of smoothly reflecting a cubemap image.",img:"reflect.png"},{desc:"<b>Curve Coloring</b><br>Press <code>N</code> to change a single curve's color.",img:"color.png"}],[{desc:"<b>Main Assignment: High-Performance</b><br>Capable of rendering the Stanford dragon (100,000 triangles) at 4K resolution (3840x2160 pixels) in 1.7 seconds on an M1 Macbook Air.",img:"dragon_4k.png"},{desc:"<b>Main Assignment: Acceleration Structure</b><br>Computes a bounding volume hierarchy for fast intersection tests, reducing the time to render a scene with 100,000 triangles at 4K from 10 minutes to 1.7 seconds.",img:"acceleration.png"},{desc:"<b>Main Assignment: Multithreaded</b><br>Uses <code>std::thread</code> to render each scanline in a separate thread, improving performance by approximately 10x for sufficiently complex scenes.",img:"multithreaded.png"},{desc:"<b>Extra Credit: Real-Time</b><br>Capable of rendering directly to the terminal via ANSI escape sequences in real-time.",img:"realtime.png"},{desc:"<b>Extra Credit: Interactive</b><br>Click and drag the mouse to orbit around the scene to view it from different angles.",img:"interactive.png"},{desc:"<b>Extra Credit: Resizable</b><br>Re-run the program with the terminal at different zoom levels to view the scene at different resolutions.",img:"resolution.png"}]]}class dt extends at{constructor(t){super(),it(this,t,lt,ct,Ye,{})}}new dt({target:document.getElementById("app")});
